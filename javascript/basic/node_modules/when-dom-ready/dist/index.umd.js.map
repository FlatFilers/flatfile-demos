{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["/* eslint no-void: \"off\" */\n\n// Loaded ready states\nconst loadedStates = ['interactive', 'complete'];\n\n// Return Promise\nconst whenDomReady = (cb, doc) => new Promise(resolve => {\n\t// Allow doc to be passed in as the lone first param\n\tif (cb && typeof cb !== 'function') {\n\t\tdoc = cb;\n\t\tcb = null;\n\t}\n\n\t// Use global document if we don't have one\n\tdoc = doc || window.document;\n\n\t// Handle DOM load\n\tconst done = () => resolve(void (cb && setTimeout(cb)));\n\n\t// Resolve now if DOM has already loaded\n\t// Otherwise wait for DOMContentLoaded\n\tif (loadedStates.includes(doc.readyState)) {\n\t\tdone();\n\t} else {\n\t\tdoc.addEventListener('DOMContentLoaded', done);\n\t}\n});\n\n// Promise chain helper\nwhenDomReady.resume = doc => val => whenDomReady(doc).then(() => val);\n\nexport default whenDomReady;\n"],"names":["loadedStates","whenDomReady","cb","doc","Promise","window","document","done","resolve","setTimeout","includes","readyState","addEventListener","resume","then","val"],"mappings":";;;;;;AAAA;;;AAGA,IAAMA,eAAe,CAAC,aAAD,EAAgB,UAAhB,CAArB;;;AAGA,IAAMC,eAAe,SAAfA,YAAe,CAACC,EAAD,EAAKC,GAAL;QAAa,IAAIC,OAAJ,CAAY,mBAAW;;MAEpDF,MAAM,OAAOA,EAAP,KAAc,UAAxB,EAAoC;SAC7BA,EAAN;QACK,IAAL;;;;QAIKC,OAAOE,OAAOC,QAApB;;;MAGMC,OAAO,SAAPA,IAAO;UAAMC,QAAQ,MAAMN,MAAMO,WAAWP,EAAX,CAAZ,CAAR,CAAN;GAAb;;;;MAIIF,aAAaU,OAAb,CAAsBP,IAAIQ,UAA1B,CAAJ,SAA2C;;GAA3C,MAEO;OACFC,gBAAJ,CAAqB,kBAArB,EAAyCL,IAAzC;;EAlBgC,CAAb;CAArB;;;AAuBAN,aAAaY,MAAb,GAAsB;QAAO;SAAOZ,aAAaE,GAAb,EAAkBW,IAAlB,CAAuB;UAAMC,GAAN;GAAvB,CAAP;EAAP;CAAtB,CAEA;;;;"}