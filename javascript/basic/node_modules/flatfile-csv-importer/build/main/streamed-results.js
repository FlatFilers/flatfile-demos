"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StreamedResults = (function () {
    function StreamedResults(data, meta) {
        this.$meta = meta;
        this.$data = data;
    }
    Object.defineProperty(StreamedResults.prototype, "rawOutput", {
        /**
         * The raw output from the importer including all deleted rows
         * and sequence info
         */
        get: function () {
            return this.$data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "data", {
        /**
         * An array of valid data, key-mapped to the configuration provided
         * (alias of validData)
         */
        get: function () {
            return this.validData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "validData", {
        /**
         * An array of valid data, key-mapped to the configuration provided
         */
        get: function () {
            return this.$data.filter(function (v) { return v.valid; })
                .filter(function (v) { return !v.deleted; })
                .map(function (v) { return v.data; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "deletedData", {
        /**
         * Rows of data the user excluded from the final results,
         * key-mapped to the configuration provided
         */
        get: function () {
            return this.$data.filter(function (v) { return v.deleted; })
                .map(function (v) { return v.data; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "allData", {
        /**
         * All data from the original file upload including deleted rows,
         * key-mapped to the configuration provided
         */
        get: function () {
            return this.$data.map(function (v) { return v.data; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "remainingChunks", {
        /**
         * The number of remaining chunks in the stream
         */
        get: function () {
            return Math.ceil((this.totalChunks - this.currentChunk) / this.$meta.inChunks);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "totalChunks", {
        /**
         * The total number of chunks that will have to be received before data processing is completed
         */
        get: function () {
            return Math.ceil(this.$meta.count_rows_accepted / this.$meta.inChunks);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "chunkSize", {
        /**
         * The size of chunks as configured when requesting data.
         */
        get: function () {
            return this.$meta.inChunks;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "currentChunk", {
        /**
         * The current chunk by index
         */
        get: function () {
            return (this.$meta.pointer + this.chunkSize) / this.chunkSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamedResults.prototype, "hasMore", {
        /**
         * The current chunk by index
         */
        get: function () {
            return this.$meta.hasMore;
        },
        enumerable: true,
        configurable: true
    });
    return StreamedResults;
}());
exports.default = StreamedResults;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZWFtZWQtcmVzdWx0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHJlYW1lZC1yZXN1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0E7SUFXRSx5QkFBYSxJQUF5QixFQUFFLElBQWtCO1FBQ3hELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFBO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFBO0lBQ25CLENBQUM7SUFNRCxzQkFBSSxzQ0FBUztRQUpiOzs7V0FHRzthQUNIO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUE7UUFDbkIsQ0FBQzs7O09BQUE7SUFNRCxzQkFBSSxpQ0FBSTtRQUpSOzs7V0FHRzthQUNIO1lBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUE7UUFDdkIsQ0FBQzs7O09BQUE7SUFLRCxzQkFBSSxzQ0FBUztRQUhiOztXQUVHO2FBQ0g7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsS0FBSyxFQUFQLENBQU8sQ0FBQztpQkFDbkMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFWLENBQVUsQ0FBQztpQkFDdkIsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksRUFBTixDQUFNLENBQUMsQ0FBQTtRQUNyQixDQUFDOzs7T0FBQTtJQU1ELHNCQUFJLHdDQUFXO1FBSmY7OztXQUdHO2FBQ0g7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsT0FBTyxFQUFULENBQVMsQ0FBQztpQkFDckMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksRUFBTixDQUFNLENBQUMsQ0FBQTtRQUNyQixDQUFDOzs7T0FBQTtJQU1ELHNCQUFJLG9DQUFPO1FBSlg7OztXQUdHO2FBQ0g7WUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsSUFBSSxFQUFOLENBQU0sQ0FBQyxDQUFBO1FBQ3BDLENBQUM7OztPQUFBO0lBS0Qsc0JBQUksNENBQWU7UUFIbkI7O1dBRUc7YUFDSDtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNoRixDQUFDOzs7T0FBQTtJQUtELHNCQUFJLHdDQUFXO1FBSGY7O1dBRUc7YUFDSDtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUN4RSxDQUFDOzs7T0FBQTtJQUtELHNCQUFJLHNDQUFTO1FBSGI7O1dBRUc7YUFDSDtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQTtRQUM1QixDQUFDOzs7T0FBQTtJQUtELHNCQUFJLHlDQUFZO1FBSGhCOztXQUVHO2FBQ0g7WUFDRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQTtRQUMvRCxDQUFDOzs7T0FBQTtJQUtELHNCQUFJLG9DQUFPO1FBSFg7O1dBRUc7YUFDSDtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQTtRQUMzQixDQUFDOzs7T0FBQTtJQUNILHNCQUFDO0FBQUQsQ0FBQyxBQTVGRCxJQTRGQyJ9